{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/custom-hook-http/src/components/NewTask/NewTask.js\";\nimport { useMemo, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  var _s = $RefreshSig$();\n\n  const enterTaskHandler = async taskText => {\n    _s();\n\n    const requestObj = useMemo({\n      url: 'https://custom-hook-1-default-rtdb.firebaseio.com/tasks.json',\n      body: JSON.stringify({\n        text: taskText\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }, []);\n    const {\n      isLoading,\n      error,\n      sendHttp\n    } = useHttp(requestObj);\n    const data = await response.json();\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  _s(enterTaskHandler, \"5YNJ0xcPuB25KwwEQZe+1/7juzc=\", false, function () {\n    return [useHttp];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/custom-hook-http/src/components/NewTask/NewTask.js"],"names":["useMemo","useState","useHttp","Section","TaskForm","NewTask","props","enterTaskHandler","taskText","requestObj","url","body","JSON","stringify","text","headers","method","isLoading","error","sendHttp","data","response","json","generatedId","name","createdTask","id","onAddTask"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAAA;;AAC3C,UAAMC,UAAU,GAAGT,OAAO,CAAC;AACzBU,MAAAA,GAAG,EAAE,8DADoB;AAEzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAAf,CAFmB;AAGzBO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHgB;AAMzBC,MAAAA,MAAM,EAAE;AANiB,KAAD,EAOvB,EAPuB,CAA1B;AASA,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAAgCjB,OAAO,CAACO,UAAD,CAA7C;AAEE,UAAMW,IAAI,GAAG,MAAMC,QAAQ,CAACC,IAAT,EAAnB;AAEA,UAAMC,WAAW,GAAGH,IAAI,CAACI,IAAzB,CAdyC,CAcV;;AAC/B,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBT,MAAAA,IAAI,EAAEN;AAAzB,KAApB;AAEAF,IAAAA,KAAK,CAACqB,SAAN,CAAgBF,WAAhB;AACD,GAlBH;;AAFyB,KAEnBlB,gBAFmB;AAAA,YAYeL,OAZf;AAAA;;AAsBzB,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEK,gBAAvB;AAAyC,MAAA,OAAO,EAAEU;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BD;;KAAMb,O;AA8BN,eAAeA,OAAf","sourcesContent":["import { useMemo, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n\n  const enterTaskHandler = async (taskText) => {\n    const requestObj = useMemo({\n      url: 'https://custom-hook-1-default-rtdb.firebaseio.com/tasks.json',\n      body: JSON.stringify({ text: taskText }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    }, []);\n\n    const {isLoading, error, sendHttp } = useHttp(requestObj)\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}