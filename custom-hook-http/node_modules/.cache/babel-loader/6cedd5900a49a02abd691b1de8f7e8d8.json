{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/custom-hook-http/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const applyData = useCallback(async response => {\n    const data = await response.json();\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  }, []);\n  const requestObj = useMemo({\n    url: 'https://custom-hook-1-default-rtdb.firebaseio.com/tasks.json',\n    body: JSON.stringify({\n      text: taskText\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  }, []);\n  const {\n    isLoading,\n    error,\n    sendHttp\n  } = useHttp(requestObj, applyData);\n\n  const enterTaskHandler = async taskText => {\n    sendHttp();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"1OUhw3XYpQ+rp699AdyJgXGivJ8=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/custom-hook-http/src/components/NewTask/NewTask.js"],"names":["useCallback","useMemo","useState","useHttp","Section","TaskForm","NewTask","props","applyData","response","data","json","generatedId","name","createdTask","id","text","taskText","onAddTask","requestObj","url","body","JSON","stringify","headers","method","isLoading","error","sendHttp","enterTaskHandler"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,SAAS,GAAGR,WAAW,CAAC,MAAOS,QAAP,IAAoB;AAChD,UAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEA,UAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAHgD,CAGjB;;AAC/B,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEC;AAAzB,KAApB;AAEAV,IAAAA,KAAK,CAACW,SAAN,CAAgBJ,WAAhB;AACD,GAP4B,EAO3B,EAP2B,CAA7B;AASA,QAAMK,UAAU,GAAGlB,OAAO,CAAC;AACzBmB,IAAAA,GAAG,EAAE,8DADoB;AAEzBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,IAAI,EAAEC;AAAR,KAAf,CAFmB;AAGzBO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHgB;AAMzBC,IAAAA,MAAM,EAAE;AANiB,GAAD,EAOvB,EAPuB,CAA1B;AASA,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAgCzB,OAAO,CAACgB,UAAD,EAAaX,SAAb,CAA7C;;AAEA,QAAMqB,gBAAgB,GAAG,MAAOZ,QAAP,IAAoB;AACzCW,IAAAA,QAAQ;AACT,GAFH;;AAIA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEC,gBAAvB;AAAyC,MAAA,OAAO,EAAEH;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;GAAMrB,O;UAoBkCH,O;;;KApBlCG,O;AAkCN,eAAeA,OAAf","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n\n  const applyData = useCallback(async (response) => {\n    const data = await response.json();\n\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  },[]);\n\n  const requestObj = useMemo({\n    url: 'https://custom-hook-1-default-rtdb.firebaseio.com/tasks.json',\n    body: JSON.stringify({ text: taskText }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }, []);\n\n  const {isLoading, error, sendHttp } = useHttp(requestObj, applyData);\n\n  const enterTaskHandler = async (taskText) => {\n      sendHttp();\n    };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}