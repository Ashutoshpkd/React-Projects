{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/custom-hook-http/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const transformData = useCallback(data => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  }, []);\n  const requestObj = {\n    url: 'https://custom-hook-1-default-rtdb.firebaseio.com/tasks.json'\n  };\n  const {\n    isLoading,\n    error,\n    sendHttpRequest: fetchTasks\n  } = useHttp(requestObj, transformData);\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xZH+uMNp3Ptd/z455CkLJmp2VhM=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/custom-hook-http/src/App.js"],"names":["React","useCallback","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","transformData","data","loadedTasks","taskKey","push","id","text","requestObj","url","isLoading","error","sendHttpRequest","fetchTasks","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,aAAa,GAAGT,WAAW,CAAEU,IAAD,IAAU;AAC1C,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,IAAtB,EAA4B;AAC1BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcG;AAAnC,OAAjB;AACD;;AAEDP,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GARgC,EAQ9B,EAR8B,CAAjC;AAUA,QAAMK,UAAU,GAAG;AACjBC,IAAAA,GAAG,EAAE;AADY,GAAnB;AAIA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,eAAe,EAACC;AAApC,MAAmDhB,OAAO,CAACW,UAAD,EAAYP,aAAZ,CAAhE;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/Bf,IAAAA,QAAQ,CAAEgB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEf,KADT;AAEE,MAAA,OAAO,EAAEW,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQf,G;UAiBkDD,O;;;KAjBlDC,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const transformData = useCallback((data) => {\n    const loadedTasks = [];\n    \n    for (const taskKey in data) {\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  }, []);\n\n  const requestObj = {\n    url: 'https://custom-hook-1-default-rtdb.firebaseio.com/tasks.json',\n  }\n\n  const { isLoading, error, sendHttpRequest:fetchTasks } = useHttp(requestObj,transformData);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}