{"ast":null,"code":"import { createStore } from 'redux';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nconst INITIAL_COUNTER_STATE = {\n  counter: 0,\n  showCounter: true\n}; // const reducer = (state = INITIAL_STATE, action) => {\n//     if(action.type === 'INCREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter + 1,\n//         }\n//     }\n//     if(action.type === 'DECREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter - 1,\n//         }\n//     }\n//     if(action.type === 'TOGGLE') {\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//     if(action.type === 'INCREASE') {\n//         return {\n//             ...state,\n//             counter: state.counter + action.increase,\n//         }\n//     }\n//     return state;\n// }\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: INITIAL_COUNTER_STATE,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, payload) {\n      debugger;\n      console.log(payload.increase);\n      state.counter = state.counter + payload.increase;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/redux-practice/src/store/index.js"],"names":["createStore","configureStore","createSlice","INITIAL_COUNTER_STATE","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","payload","console","log","toggle","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,CADiB;AAE1BC,EAAAA,WAAW,EAAE;AAFa,CAA9B,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,qBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,OAAR,EAAiB;AACrB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACD,QAApB;AACAF,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,OAAO,CAACD,QAAxC;AACH,KAXK;;AAYNI,IAAAA,MAAM,CAACN,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAdK;AAHmB,CAAD,CAAhC;AAqBA,MAAMa,KAAK,GAAGjB,cAAc,CAAC;AACzBkB,EAAAA,OAAO,EAAEb,YAAY,CAACa;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGd,YAAY,CAACe,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst INITIAL_COUNTER_STATE = {\n    counter: 0,\n    showCounter: true,\n};\n\n// const reducer = (state = INITIAL_STATE, action) => {\n//     if(action.type === 'INCREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter + 1,\n//         }\n//     }\n//     if(action.type === 'DECREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter - 1,\n//         }\n//     }\n//     if(action.type === 'TOGGLE') {\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//     if(action.type === 'INCREASE') {\n//         return {\n//             ...state,\n//             counter: state.counter + action.increase,\n//         }\n//     }\n//     return state;\n// }\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: INITIAL_COUNTER_STATE,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, payload) {\n            debugger;\n            console.log(payload.increase)\n            state.counter = state.counter + payload.increase;\n        },\n        toggle(state) {\n            state.showCounter = !state.showCounter;\n        },\n    }\n});\n\nconst store = configureStore({\n    reducer: counterSlice.reducer,\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}