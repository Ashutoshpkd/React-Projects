{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [isNametouched, setIsNameTouched] = useState(false);\n  const inavlid = enteredName.trim() === '' && isNametouched;\n\n  const changeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (inavlid) {\n      return;\n    }\n\n    console.log(enteredName);\n  };\n\n  const focusHandler = e => {\n    setIsNameTouched(true);\n  };\n\n  const className = invalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeHandler,\n        value: enteredName,\n        onFocus: focusHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), invalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name is invalid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"xAl7/r4mrJihLTvFhkHAhSbyZls=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js"],"names":["React","useState","SimpleInput","props","enteredName","setEnteredName","isNametouched","setIsNameTouched","inavlid","trim","changeHandler","e","target","value","submitHandler","preventDefault","console","log","focusHandler","className","invalid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMO,OAAO,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAvB,IAA6BH,aAA7C;;AAEA,QAAMI,aAAa,GAAIC,CAAD,IAAO;AAC3BN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGH,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAGP,OAAH,EAAY;AACV;AACD;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;AACD,GAND;;AAQA,QAAMc,YAAY,GAAGP,CAAC,IAAI;AACxBJ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAIA,QAAMY,SAAS,GAAGC,OAAO,GAAG,sBAAH,GAA4B,cAArD;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEN,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,SAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,MAFH;AAGA,QAAA,QAAQ,EAAET,aAHV;AAIA,QAAA,KAAK,EAAEN,WAJP;AAKA,QAAA,OAAO,EAAEc;AALT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGE,OAAO,iBAAK;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXf,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzCD;;GAAMlB,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [isNametouched, setIsNameTouched] = useState(false);\n\n  const inavlid = enteredName.trim() === '' && isNametouched;\n\n  const changeHandler = (e) => {\n    setEnteredName(e.target.value);\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if(inavlid) {\n      return;\n    }\n    console.log(enteredName);\n  }\n\n  const focusHandler = e => {\n    setIsNameTouched(true);\n  }\n\n  const className = invalid ? 'form-control invalid' : 'form-control';\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={className}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n        type='text'\n        id='name'\n        onChange={changeHandler}\n        value={enteredName}\n        onFocus={focusHandler}\n        />\n      </div>\n      {invalid && (<p className='error-text'>Name is invalid.</p>)}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}