{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const validateName = name => name.trim() === '';\n\n  const validateEmail = email => email.trim() === '' || !email.includes('@');\n\n  const {\n    value: enteredName,\n    hasError: invalidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHAndler,\n    reset: resetName\n  } = useInput(validateName);\n  const {\n    value: email,\n    hasError: invalidEmail,\n    changeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(validateEmail);\n  const invalid = invalidName && invalidEmail;\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (invalid) {\n      return;\n    }\n\n    console.log(enteredName, email);\n    resetName();\n    resetEmail();\n  };\n\n  const className = invalidName ? 'form-control invalid' : 'form-control';\n  const classEmail = invalidEmail ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        value: enteredName,\n        onBlur: nameBlurHAndler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), invalidName && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name is invalid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classEmail,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        value: email,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), invalidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email is invalid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: invalid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"Rk8BTJULN0Bl/FGzi7lkHhNdKQY=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","validateName","name","trim","validateEmail","email","includes","value","enteredName","hasError","invalidName","changeHandler","nameChangeHandler","blurHandler","nameBlurHAndler","reset","resetName","invalidEmail","emailChangeHandler","emailBlurHandler","resetEmail","invalid","submitHandler","e","preventDefault","console","log","className","classEmail"],"mappings":";;;AACA,OAAOA,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAMC,YAAY,GAAIC,IAAD,IAAWA,IAAI,CAACC,IAAL,OAAgB,EAAhD;;AACA,QAAMC,aAAa,GAAIC,KAAD,IAAYA,KAAK,CAACF,IAAN,OAAiB,EAAjB,IAAuB,CAACE,KAAK,CAACC,QAAN,CAAe,GAAf,CAA1D;;AAEA,QAAM;AACJC,IAAAA,KAAK,EAAEC,WADH;AAEJC,IAAAA,QAAQ,EAAEC,WAFN;AAGJC,IAAAA,aAAa,EAAEC,iBAHX;AAIJC,IAAAA,WAAW,EAAEC,eAJT;AAKJC,IAAAA,KAAK,EAAEC;AALH,MAMFjB,QAAQ,CAACE,YAAD,CANZ;AAQA,QAAM;AACJM,IAAAA,KAAK,EAAEF,KADH;AAEJI,IAAAA,QAAQ,EAAEQ,YAFN;AAGJN,IAAAA,aAAa,EAAEO,kBAHX;AAIJL,IAAAA,WAAW,EAAEM,gBAJT;AAKJJ,IAAAA,KAAK,EAAEK;AALH,MAMFrB,QAAQ,CAACK,aAAD,CANZ;AASA,QAAMiB,OAAO,GAAIX,WAAD,IAAkBO,YAAlC;;AAEA,QAAMK,aAAa,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGH,OAAH,EAAY;AACV;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ,EAAyBH,KAAzB;AACAW,IAAAA,SAAS;AACTI,IAAAA,UAAU;AACX,GARD;;AAUA,QAAMO,SAAS,GAAGjB,WAAW,GAAG,sBAAH,GAA4B,cAAzD;AACA,QAAMkB,UAAU,GAAGX,YAAY,GAAG,sBAAH,GAA4B,cAA3D;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEK,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,SAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,MAFH;AAGA,QAAA,QAAQ,EAAEf,iBAHV;AAIA,QAAA,KAAK,EAAEJ,WAJP;AAKA,QAAA,MAAM,EAAEM;AALR;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGJ,WAAW,iBAAK;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXnB,eAYE;AAAK,MAAA,SAAS,EAAEkB,UAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,EAAE,EAAC,OAFH;AAGA,QAAA,QAAQ,EAAEV,kBAHV;AAIA,QAAA,KAAK,EAAEb,KAJP;AAKA,QAAA,MAAM,EAAEc;AALR;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAsBGF,YAAY,iBAAK;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBpB,eAuBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAEI,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjED;;GAAMrB,W;UAWAD,Q,EAQAA,Q;;;KAnBAC,W;AAmEN,eAAeA,WAAf","sourcesContent":["\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = () => {\n\n  const validateName = (name) => (name.trim() === '');\n  const validateEmail = (email) => (email.trim() === '' || !email.includes('@'))\n\n  const {\n    value: enteredName,\n    hasError: invalidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHAndler,\n    reset: resetName,\n  } = useInput(validateName);\n\n  const {\n    value: email,\n    hasError: invalidEmail,\n    changeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(validateEmail);\n\n\n  const invalid = (invalidName) && (invalidEmail);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if(invalid) {\n      return;\n    }\n    console.log(enteredName, email);\n    resetName();\n    resetEmail();\n  }\n\n  const className = invalidName ? 'form-control invalid' : 'form-control';\n  const classEmail = invalidEmail ? 'form-control invalid' : 'form-control';\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={className}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n        type='text'\n        id='name'\n        onChange={nameChangeHandler}\n        value={enteredName}\n        onBlur={nameBlurHAndler}\n        />\n      </div>\n      {invalidName && (<p className='error-text'>Name is invalid.</p>)}\n      <div className={classEmail}>\n        <label htmlFor='name'>Email Address</label>\n        <input\n        type='email'\n        id='email'\n        onChange={emailChangeHandler}\n        value={email}\n        onBlur={emailBlurHandler}\n        />\n      </div>\n      {invalidEmail && (<p className='error-text'>Email is invalid.</p>)}\n      <div className=\"form-actions\">\n        <button disabled={invalid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}