{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\n  const {\n    value: enteredName,\n    isValueTouched: isNametouched,\n    hasError: invalidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHAndler\n  } = useInput(name => name.trim() === '');\n  const invalid = enteredName.trim() === '' && isNametouched || isEmailTouched && (email.trim() === '' || !email.includes('@'));\n  const invalidEmail = isEmailTouched && (email.trim() === '' || !email.includes('@'));\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setIsNameTouched(true);\n    setIsEmailTouched(true);\n\n    if (invalid) {\n      return;\n    }\n\n    console.log(enteredName, email);\n    setIsNameTouched(false);\n    setEnteredName('');\n    setIsEmailTouched(false);\n    setEmail('');\n  };\n\n  const emailFocusHandler = e => {\n    setIsEmailTouched(true);\n  };\n\n  const emailChangeHandler = e => {\n    setEmail(e.target.value);\n  };\n\n  const className = invalidName ? 'form-control invalid' : 'form-control';\n  const classEmail = invalidEmail ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        value: enteredName,\n        onBlur: nameBlurHAndler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), invalidName && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name is invalid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classEmail,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        value: email,\n        onBlur: emailFocusHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), invalidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email is invalid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: invalid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"AlNInLc6V+iDSb9Qoe3bi5SKNC8=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js"],"names":["React","useState","useInput","SimpleInput","props","email","setEmail","isEmailTouched","setIsEmailTouched","value","enteredName","isValueTouched","isNametouched","hasError","invalidName","changeHandler","nameChangeHandler","blurHandler","nameBlurHAndler","name","trim","invalid","includes","invalidEmail","submitHandler","e","preventDefault","setIsNameTouched","console","log","setEnteredName","emailFocusHandler","emailChangeHandler","target","className","classEmail"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const [email, setEmail] = useState('');\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\n\n  const {\n    value: enteredName,\n    isValueTouched: isNametouched,\n    hasError: invalidName,\n    changeHandler: nameChangeHandler,\n    blurHandler: nameBlurHAndler,\n  } = useInput(name => name.trim() === '');\n\n  const invalid = (enteredName.trim() === '' && isNametouched) || (isEmailTouched && (email.trim() === '' || !email.includes('@')));\n  const invalidEmail = isEmailTouched && (email.trim() === '' || !email.includes('@'));\n\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setIsNameTouched(true);\n    setIsEmailTouched(true);\n    if(invalid) {\n      return;\n    }\n    console.log(enteredName, email);\n    setIsNameTouched(false);\n    setEnteredName('');\n    setIsEmailTouched(false);\n    setEmail('');\n  }\n\n  const emailFocusHandler = e => {\n    setIsEmailTouched(true);\n  }\n\n  const emailChangeHandler = e => {\n    setEmail(e.target.value);\n  }\n\n  const className = invalidName ? 'form-control invalid' : 'form-control';\n  const classEmail = invalidEmail ? 'form-control invalid' : 'form-control';\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={className}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n        type='text'\n        id='name'\n        onChange={nameChangeHandler}\n        value={enteredName}\n        onBlur={nameBlurHAndler}\n        />\n      </div>\n      {invalidName && (<p className='error-text'>Name is invalid.</p>)}\n      <div className={classEmail}>\n        <label htmlFor='name'>Email Address</label>\n        <input\n        type='email'\n        id='email'\n        onChange={emailChangeHandler}\n        value={email}\n        onBlur={emailFocusHandler}\n        />\n      </div>\n      {invalidEmail && (<p className='error-text'>Email is invalid.</p>)}\n      <div className=\"form-actions\">\n        <button disabled={invalid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}