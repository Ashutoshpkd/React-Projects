{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [invalid, setInvalid] = useState(false);\n\n  const changeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setInvalid(true);\n      return;\n    }\n\n    setInvalid(false);\n    console.log(enteredName);\n  };\n\n  const focusHandler = e => {\n    if (e.target.value.trim() === '') {\n      setInvalid(true);\n    } else {\n      setInvalid(false);\n    }\n  };\n\n  const className = invalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), invalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name is invalid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"u3e1+mtBOT/ZjxmZj9Yu5d65lH0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/forms/src/components/SimpleInput.js"],"names":["React","useState","SimpleInput","props","enteredName","setEnteredName","invalid","setInvalid","changeHandler","e","target","value","submitHandler","preventDefault","trim","console","log","focusHandler","className"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3BJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGH,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAGT,WAAW,CAACU,IAAZ,OAAuB,EAA1B,EAA8B;AAC5BP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD;;AACDA,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACD,GARD;;AAUA,QAAMa,YAAY,GAAGR,CAAC,IAAI;AACxB,QAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeG,IAAf,OAA0B,EAA7B,EAAiC;AAC/BP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAND;;AAOA,QAAMW,SAAS,GAAGZ,OAAO,GAAG,sBAAH,GAA4B,cAArD;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEM,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEM,SAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEV,aAAvC;AAAsD,QAAA,KAAK,EAAEJ;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGE,OAAO,iBAAK;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALf,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCD;;GAAMJ,W;;KAAAA,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [invalid, setInvalid] = useState(false);\n\n  const changeHandler = (e) => {\n    setEnteredName(e.target.value);\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if(enteredName.trim() === '') {\n      setInvalid(true);\n      return;\n    }\n    setInvalid(false);\n    console.log(enteredName);\n  }\n\n  const focusHandler = e => {\n    if(e.target.value.trim() === '') {\n      setInvalid(true);\n    } else {\n      setInvalid(false);\n    }\n  }\n  const className = invalid ? 'form-control invalid' : 'form-control';\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={className}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={changeHandler} value={enteredName}/>\n      </div>\n      {invalid && (<p className='error-text'>Name is invalid.</p>)}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}