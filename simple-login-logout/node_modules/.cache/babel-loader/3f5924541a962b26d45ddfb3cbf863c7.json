{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/simple-login-logout/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogIn: () => {},\n  openModal: () => {},\n  closeModal: () => {},\n  isOpen: false\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('IS_LOGGED_IN', 'true');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.setItem('IS_LOGGED_IN', 'false');\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('IS_LOGGED_IN');\n    const isAdmin = localStorage.getItem('IS_ADMIN');\n    setIsLoggedIn(isLoggedIn === 'true');\n    setIsOpen(isAdmin === 'true');\n  }, []);\n\n  const openModal = () => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('IS_ADMIN', 'true');\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    localStorage.setItem('IS_ADMIN', 'false');\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogIn: loginHandler,\n      openModal: openModal,\n      closeModal: closeModal,\n      isOpen: isOpen\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"wkJzWcZ/IbNzVFR67hk2a8V9YQA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/simple-login-logout/src/store/auth-context.js"],"names":["React","useEffect","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogIn","openModal","closeModal","isOpen","AuthContextProvider","props","setIsLoggedIn","setIsOpen","loginHandler","email","password","localStorage","setItem","logoutHandler","getItem","isAdmin","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFkB;AAGpCC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAHmB;AAIpCC,EAAAA,SAAS,EAAE,MAAM,CAAE,CAJiB;AAKpCC,EAAAA,UAAU,EAAE,MAAM,CAAE,CALgB;AAMpCC,EAAAA,MAAM,EAAE;AAN4B,CAApB,CAApB;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACP,UAAD,EAAaQ,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,MAAD,EAASI,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMa,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,MAArC;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMO,aAAa,GAAG,MAAM;AAC1BF,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,OAArC;AACAN,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,UAAU,GAAGa,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAnB;AACA,UAAMC,OAAO,GAAGJ,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAhB;AACAR,IAAAA,aAAa,CAACR,UAAU,KAAK,MAAhB,CAAb;AACAS,IAAAA,SAAS,CAACQ,OAAO,KAAK,MAAb,CAAT;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMd,SAAS,GAAG,MAAM;AACtB;AACA;AACAU,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,MAAjC;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GALD;;AAOA,QAAML,UAAU,GAAG,MAAM;AACvBS,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,OAAjC;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBT,MAAAA,UAAU,EAAEA,UADa;AAEzBC,MAAAA,QAAQ,EAAEc,aAFe;AAGzBb,MAAAA,OAAO,EAAEQ,YAHgB;AAIzBP,MAAAA,SAAS,EAAEA,SAJc;AAKzBC,MAAAA,UAAU,EAAEA,UALa;AAMzBC,MAAAA,MAAM,EAAEA;AANiB,KAA7B;AAAA,cAQKE,KAAK,CAACW;AARX;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/CM;;GAAMZ,mB;;KAAAA,mB;AAiDb,eAAeR,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: () => {},\n    onLogIn: () => {},\n    openModal: () => {},\n    closeModal: () => {},\n    isOpen: false,\n});\n\nexport const AuthContextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const loginHandler = (email, password) => {\n      // We should of course check email and password\n      // But it's just a dummy/ demo anyways\n      localStorage.setItem('IS_LOGGED_IN', 'true');\n      setIsLoggedIn(true);\n    };\n  \n    const logoutHandler = () => {\n      localStorage.setItem('IS_LOGGED_IN', 'false');\n      setIsLoggedIn(false);\n    };\n  \n    useEffect(() => {\n      const isLoggedIn = localStorage.getItem('IS_LOGGED_IN');\n      const isAdmin = localStorage.getItem('IS_ADMIN');\n      setIsLoggedIn(isLoggedIn === 'true');\n      setIsOpen(isAdmin === 'true');\n    }, []);\n\n    const openModal = () => {\n      // We should of course check email and password\n      // But it's just a dummy/ demo anyways\n      localStorage.setItem('IS_ADMIN', 'true');\n      setIsOpen(true);\n    };\n\n    const closeModal = () => {\n      localStorage.setItem('IS_ADMIN', 'false');\n      setIsOpen(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{\n            isLoggedIn: isLoggedIn,\n            onLogout: logoutHandler,\n            onLogIn: loginHandler,\n            openModal: openModal,\n            closeModal: closeModal,\n            isOpen: isOpen,\n        }} >\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}