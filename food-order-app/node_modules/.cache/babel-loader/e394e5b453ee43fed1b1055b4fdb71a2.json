{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  openModal: () => {},\n  closeModal: () => {},\n  isOpen: false\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    const isAdmin = localStorage.getItem('IS_ADMIN');\n    setIsOpen(isAdmin === 'true');\n  }, []);\n\n  const openModal = () => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('IS_ADMIN', 'true');\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    localStorage.setItem('IS_ADMIN', 'false');\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      openModal: openModal,\n      closeModal: closeModal,\n      isOpen: isOpen\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/store/auth-context.js"],"names":["React","useEffect","useState","AuthContext","createContext","openModal","closeModal","isOpen","AuthContextProvider","props","setIsOpen","isAdmin","localStorage","getItem","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACpCC,EAAAA,SAAS,EAAE,MAAM,CAAE,CADiB;AAEpCC,EAAAA,UAAU,EAAE,MAAM,CAAE,CAFgB;AAGpCC,EAAAA,MAAM,EAAE;AAH4B,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACF,MAAD,EAASG,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAhB;AACAH,IAAAA,SAAS,CAACC,OAAO,KAAK,MAAb,CAAT;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMN,SAAS,GAAG,MAAM;AACtB;AACA;AACAO,IAAAA,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiC,MAAjC;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GALD;;AAOA,QAAMJ,UAAU,GAAG,MAAM;AACvBM,IAAAA,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiC,OAAjC;AACAJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBL,MAAAA,SAAS,EAAEA,SADc;AAEzBC,MAAAA,UAAU,EAAEA,UAFa;AAGzBC,MAAAA,MAAM,EAAEA;AAHiB,KAA7B;AAAA,cAKKE,KAAK,CAACM;AALX;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7BM;;GAAMP,mB;;KAAAA,mB;AA+Bb,eAAeL,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AuthContext = React.createContext({\n    openModal: () => {},\n    closeModal: () => {},\n    isOpen: false,\n});\n\nexport const AuthContextProvider = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n  \n    useEffect(() => {\n      const isAdmin = localStorage.getItem('IS_ADMIN');\n      setIsOpen(isAdmin === 'true');\n    }, []);\n\n    const openModal = () => {\n      // We should of course check email and password\n      // But it's just a dummy/ demo anyways\n      localStorage.setItem('IS_ADMIN', 'true');\n      setIsOpen(true);\n    };\n\n    const closeModal = () => {\n      localStorage.setItem('IS_ADMIN', 'false');\n      setIsOpen(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{\n            openModal: openModal,\n            closeModal: closeModal,\n            isOpen: isOpen,\n        }} >\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}