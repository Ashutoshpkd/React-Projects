{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/store/CartContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartItem = {\n  item: [],\n  totalAmount: 0,\n  addItem: () => {},\n  removeItem: () => {}\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.item.map(obj => {\n      if (obj.id === action.item.id) {\n        let newItem = obj;\n        newItem.amount = parseInt(newItem.amount) + parseInt(action.item.amount);\n        return newItem;\n      }\n\n      return obj;\n    }); //       const updatedItem = state.item.concat(action.item);\n\n    const updatedAmount = state.totalAmount + parseFloat(action.item.price) * parseFloat(action.item.amount);\n    return {\n      item: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCartItem;\n};\n\nconst CartContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartItem);\n\n  const onAddItem = item => {\n    console.log('IN_CONTEXT', item);\n    dispatchCartState({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const onRemoveItem = id => {\n    dispatchCartState({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartItems = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: onAddItem,\n    removeItem: onRemoveItem\n  };\n  console.log('ASHUTOSH_CART_ITEM', cartState.item);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartItems,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContextProvider, \"ikXYo24eXlpyxekSZdD3jFWwirU=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/store/CartContextProvider.js"],"names":["React","useReducer","CartContext","defaultCartItem","item","totalAmount","addItem","removeItem","cartReducer","state","action","type","updatedItems","map","obj","id","newItem","amount","parseInt","updatedAmount","parseFloat","price","CartContextProvider","props","cartState","dispatchCartState","onAddItem","console","log","onRemoveItem","cartItems","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,WAAW,EAAE,CAFO;AAGpBC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAHG;AAIpBC,EAAAA,UAAU,EAAE,MAAM,CAAE;AAJA,CAAxB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAA0B;AACtB,UAAMC,YAAY,GAAGH,KAAK,CAACL,IAAN,CAAWS,GAAX,CAAgBC,GAAD,IAAS;AACzC,UAAIA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACN,IAAP,CAAYW,EAA3B,EAA+B;AAC3B,YAAIC,OAAO,GAAGF,GAAd;AACAE,QAAAA,OAAO,CAACC,MAAR,GAAiBC,QAAQ,CAACF,OAAO,CAACC,MAAT,CAAR,GAA2BC,QAAQ,CAACR,MAAM,CAACN,IAAP,CAAYa,MAAb,CAApD;AACA,eAAOD,OAAP;AACH;;AACD,aAAOF,GAAP;AACH,KAPoB,CAArB,CADsB,CAS7B;;AACO,UAAMK,aAAa,GAAGV,KAAK,CAACJ,WAAN,GAAqBe,UAAU,CAACV,MAAM,CAACN,IAAP,CAAYiB,KAAb,CAAV,GAAgCD,UAAU,CAACV,MAAM,CAACN,IAAP,CAAYa,MAAb,CAArF;AAEA,WAAO;AACHb,MAAAA,IAAI,EAAEQ,YADH;AAEHP,MAAAA,WAAW,EAAEc;AAFV,KAAP;AAIH;;AACD,SAAOhB,eAAP;AACH,CAnBD;;AAqBA,MAAMmB,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCxB,UAAU,CAACO,WAAD,EAAcL,eAAd,CAAjD;;AAEA,QAAMuB,SAAS,GAAItB,IAAD,IAAU;AACxBuB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BxB,IAA1B;AACAqB,IAAAA,iBAAiB,CAAC;AAACd,MAAAA,IAAI,EAAE,KAAP;AAAcP,MAAAA,IAAI,EAACA;AAAnB,KAAD,CAAjB;AACH,GAHD;;AAKA,QAAMyB,YAAY,GAAId,EAAD,IAAQ;AACzBU,IAAAA,iBAAiB,CAAC;AAACd,MAAAA,IAAI,EAAE,QAAP;AAAiBI,MAAAA,EAAE,EAACA;AAApB,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAMe,SAAS,GAAG;AACd1B,IAAAA,IAAI,EAAEoB,SAAS,CAACpB,IADF;AAEdC,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFT;AAGdC,IAAAA,OAAO,EAAEoB,SAHK;AAIdnB,IAAAA,UAAU,EAAEsB;AAJE,GAAlB;AAOAF,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,SAAS,CAACpB,IAA5C;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE0B,SAA7B;AAAA,cACKP,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BD;;GAAMT,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartItem = {\n    item: [],\n    totalAmount: 0,\n    addItem: () => {},\n    removeItem: () => {},\n};\n\nconst cartReducer = (state, action) => {\n    if(action.type === 'ADD') {\n        const updatedItems = state.item.map((obj) => {\n            if (obj.id === action.item.id) {\n                let newItem = obj;\n                newItem.amount = parseInt(newItem.amount) + parseInt(action.item.amount)\n                return newItem;\n            }\n            return obj;\n        })\n //       const updatedItem = state.item.concat(action.item);\n        const updatedAmount = state.totalAmount + (parseFloat(action.item.price) * parseFloat(action.item.amount));\n\n        return {\n            item: updatedItems,\n            totalAmount: updatedAmount,\n        }\n    }\n    return defaultCartItem;\n};\n\nconst CartContextProvider = (props) => {\n    const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartItem);\n\n    const onAddItem = (item) => {\n        console.log('IN_CONTEXT', item);\n        dispatchCartState({type: 'ADD', item:item});\n    }\n\n    const onRemoveItem = (id) => {\n        dispatchCartState({type: 'REMOVE', id:id});\n    }\n\n    const cartItems = {\n        item: cartState.item,\n        totalAmount: cartState.totalAmount,\n        addItem: onAddItem,\n        removeItem: onRemoveItem,\n    };\n\n    console.log('ASHUTOSH_CART_ITEM', cartState.item);\n\n    return (\n        <CartContext.Provider value={cartItems}>\n            {props.children}\n        </CartContext.Provider>\n    )\n};\n\nexport default CartContextProvider;"]},"metadata":{},"sourceType":"module"}