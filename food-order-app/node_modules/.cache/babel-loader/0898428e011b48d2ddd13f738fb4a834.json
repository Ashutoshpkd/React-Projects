{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './AvailableMeals.module.css';\nimport MealsItem from './MealsItem/MealsItem';\nimport Modal from '../UI/Modal/Modal';\nimport RingLoader from \"react-spinners/RingLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = props => {\n  _s();\n\n  const [mealsData, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    const response = await fetch('https://custom-hook-1-default-rtdb.firebaseio.com/meals.json');\n    console.log(response);\n    const data = await response.json();\n    console.log(data);\n    setMeals(prevMeals => prevMeals.concat(data));\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const meals = mealsData.map(meal => /*#__PURE__*/_jsxDEV(MealsItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [!isLoading && /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(RingLoader, {\n        color: \"#F00D29\",\n        loading: true,\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"3TBlgsr3N77jCwBUx6e7OkrsZW8=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","classes","MealsItem","Modal","RingLoader","AvailableMeals","props","mealsData","setMeals","isLoading","setIsLoading","fetchData","response","fetch","console","log","data","json","prevMeals","concat","meals","map","meal","id","name","description","price"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMY,SAAS,GAAG,YAAY;AAC1BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAAD,CAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAR,IAAAA,QAAQ,CAACU,SAAS,IAAIA,SAAS,CAACC,MAAV,CAAiBH,IAAjB,CAAd,CAAR;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GATD;;AAWAZ,EAAAA,SAAS,CAAE,MAAM;AACba,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAKA,QAAMS,KAAK,GACPb,SAAS,CAACc,GAAV,CAAeC,IAAD,iBACV,QAAC,SAAD;AAEA,IAAA,EAAE,EAAEA,IAAI,CAACC,EAFT;AAGA,IAAA,IAAI,EAAED,IAAI,CAACE,IAHX;AAIA,IAAA,WAAW,EAAEF,IAAI,CAACG,WAJlB;AAKA,IAAA,KAAK,EAAEH,IAAI,CAACI;AALZ,KACKJ,IAAI,CAACC,EADV;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAWA,sBACI;AAAS,IAAA,SAAS,EAAEtB,OAAO,CAACmB,KAA5B;AAAA,eACP,CAACX,SAAD,iBAA2B,QAAC,IAAD;AAAA,6BACZ;AAAA,kBACKW;AADL;AAAA;AAAA;AAAA;AAAA;AADY;AAAA;AAAA;AAAA;AAAA,YADpB,EAMKX,SAAS,iBACN,QAAC,KAAD;AAAA,6BAChB,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,OAAO,MAAnC;AAAoC,QAAA,IAAI,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA;AADgB;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA9CD;;GAAMJ,c;;KAAAA,c;AAgDN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './AvailableMeals.module.css';\nimport MealsItem from './MealsItem/MealsItem';\nimport Modal from '../UI/Modal/Modal';\nimport RingLoader from \"react-spinners/RingLoader\";\n\nconst AvailableMeals = (props) => {\n\n    const [mealsData, setMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const fetchData = async () => {\n        setIsLoading(true);\n        const response = await fetch('https://custom-hook-1-default-rtdb.firebaseio.com/meals.json');\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n\n        setMeals(prevMeals => prevMeals.concat(data));\n        setIsLoading(false);\n    }\n\n    useEffect( () => {\n        fetchData();\n    }, []);\n\n\n    const meals =\n        mealsData.map((meal) => (\n            <MealsItem\n            key={meal.id}\n            id={meal.id}\n            name={meal.name}\n            description={meal.description}\n            price={meal.price}\n            />\n        ))\n\n    return (\n        <section className={classes.meals}>\n{!isLoading && (            <Card>\n                <ul>\n                    {meals}\n                </ul>\n            </Card>)}\n            {isLoading && (\n                <Modal>\n<RingLoader color='#F00D29' loading size={60} />\n                </Modal>\n            )}\n        </section>\n    );\n};\n\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}