{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/store/CartContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartItem = {\n  item: [],\n  totalAmount: 0,\n  addItem: () => {},\n  removeItem: () => {}\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    let updatedItem;\n    let updatedItems;\n\n    if (existingItemIndex !== -1) {\n      updatedItem = { ...state.item[existingItemIndex],\n        amount: parseInt(state.item[existingItemIndex].amount) + parseInt(action.item.amount)\n      };\n      updatedItems = [...state.item];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.item.concat(action.item);\n    }\n\n    const updatedAmount = +state.totalAmount + parseFloat(action.item.price) * parseFloat(action.item.amount);\n    return {\n      item: updatedItems,\n      totalAmount: parseFloat(updatedAmount.toFixed(2))\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingItemIndex = state.item.findIndex(item => item.id === action.id);\n    let updatedItems = [...state.item];\n    let updatedItem;\n    const removedItemPrice = state.item[existingItemIndex].price;\n\n    if (state.item[existingItemIndex].amount === 1) {\n      updatedItems.splice(existingItemIndex, 1);\n    } else {\n      updatedItem = { ...state.item[existingItemIndex],\n        amount: state.item[existingItemIndex].amount - 1\n      };\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n\n    const totalAmount = parseFloat((state.totalAmount - removedItemPrice).toFixed(2));\n    return {\n      item: updatedItems,\n      totalAmount\n    };\n  }\n\n  if (action.type === 'CLEAR') {\n    return defaultCartItem;\n  }\n\n  return defaultCartItem;\n};\n\nconst CartContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartItem);\n\n  const onAddItem = item => {\n    dispatchCartState({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const onRemoveItem = id => {\n    dispatchCartState({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const onClearCart = () => {\n    dispatchCartState({\n      type: 'CLEAR'\n    });\n  };\n\n  const cartItems = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: onAddItem,\n    removeItem: onRemoveItem,\n    clearCart: onClearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartItems,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContextProvider, \"ikXYo24eXlpyxekSZdD3jFWwirU=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/food-order-app/src/store/CartContextProvider.js"],"names":["React","useReducer","CartContext","defaultCartItem","item","totalAmount","addItem","removeItem","cartReducer","state","action","type","existingItemIndex","findIndex","id","updatedItem","updatedItems","amount","parseInt","concat","updatedAmount","parseFloat","price","toFixed","removedItemPrice","splice","CartContextProvider","props","cartState","dispatchCartState","onAddItem","onRemoveItem","onClearCart","cartItems","clearCart","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartItem = {\n    item: [],\n    totalAmount: 0,\n    addItem: () => {},\n    removeItem: () => {},\n};\n\nconst cartReducer = (state, action) => {\n    if(action.type === 'ADD') {\n        const existingItemIndex = state.item.findIndex(item => item.id === action.item.id);\n        let updatedItem;\n        let updatedItems;\n\n        if(existingItemIndex !== -1) {\n            updatedItem = {\n                ...state.item[existingItemIndex],\n                amount: parseInt(state.item[existingItemIndex].amount) + parseInt(action.item.amount),\n            }\n            updatedItems = [...state.item];\n            updatedItems[existingItemIndex] = updatedItem;\n        }\n        else {\n            updatedItems = state.item.concat(action.item);\n        }\n        const updatedAmount = +state.totalAmount + (parseFloat(action.item.price) * parseFloat(action.item.amount));\n\n        return {\n            item: updatedItems,\n            totalAmount: parseFloat(updatedAmount.toFixed(2)),\n        }\n    }\n\n    if(action.type === 'REMOVE') {\n        const existingItemIndex = state.item.findIndex(item => item.id === action.id);\n        let updatedItems = [...state.item];\n        let updatedItem;\n        const removedItemPrice = state.item[existingItemIndex].price;\n        if(state.item[existingItemIndex].amount === 1) {\n            updatedItems.splice(existingItemIndex, 1);\n        }\n        else {\n            updatedItem = {\n                ...state.item[existingItemIndex],\n                amount: state.item[existingItemIndex].amount - 1,\n            }\n            updatedItems[existingItemIndex] = updatedItem;\n        }\n        const totalAmount = parseFloat((state.totalAmount - removedItemPrice).toFixed(2));\n\n        return {\n            item: updatedItems,\n            totalAmount,\n        };\n    }\n\n    if(action.type === 'CLEAR') {\n        return defaultCartItem;\n    }\n    return defaultCartItem;\n};\n\nconst CartContextProvider = (props) => {\n    const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartItem);\n\n    const onAddItem = (item) => {\n        dispatchCartState({type: 'ADD', item:item});\n    }\n\n    const onRemoveItem = (id) => {\n        dispatchCartState({type: 'REMOVE', id:id});\n    }\n\n    const onClearCart = () => {\n        dispatchCartState({type: 'CLEAR'});\n    }\n\n    const cartItems = {\n        item: cartState.item,\n        totalAmount: cartState.totalAmount,\n        addItem: onAddItem,\n        removeItem: onRemoveItem,\n        clearCart: onClearCart,\n    };\n\n    return (\n        <CartContext.Provider value={cartItems}>\n            {props.children}\n        </CartContext.Provider>\n    )\n};\n\nexport default CartContextProvider;"]},"metadata":{},"sourceType":"module"}