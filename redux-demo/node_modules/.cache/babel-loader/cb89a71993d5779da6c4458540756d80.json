{"ast":null,"code":"import { createStore } from 'redux';\nconst INITIAL_STATE = {\n  counter: 0,\n  showCounter: true\n};\n\nconst conterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'INCREMENT') {\n    return { ...state,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'DECREMENT') {\n    return { ...state,\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === 'TOGGLE') {\n    return { ...state,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(conterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/redux-demo/src/store/index.js"],"names":["createStore","INITIAL_STATE","counter","showCounter","conterReducer","state","action","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,CADS;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAAtB;;AAKA,MAAMC,aAAa,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AAErD,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO,EACH,GAAGF,KADA;AAEHH,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFtB,KAAP;AAIH;;AACD,MAAGI,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO,EACH,GAAGF,KADA;AAEHH,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFtB,KAAP;AAIH;;AACD,MAAGI,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B;AACzB,WAAO,EACH,GAAGF,KADA;AAEHF,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFjB,KAAP;AAIH;;AACD,SAAOE,KAAP;AACH,CArBD;;AAuBA,MAAMG,KAAK,GAAGR,WAAW,CAACI,aAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from 'redux';\n\nconst INITIAL_STATE = {\n    counter: 0,\n    showCounter: true,\n}\n\nconst conterReducer = (state = INITIAL_STATE, action) => {\n\n    if(action.type === 'INCREMENT') {\n        return {\n            ...state,\n            counter: state.counter + 1,\n        }\n    }\n    if(action.type === 'DECREMENT') {\n        return {\n            ...state,\n            counter: state.counter - 1,\n        }\n    }\n    if(action.type === 'TOGGLE') {\n        return {\n            ...state,\n            showCounter: !state.showCounter\n        }\n    }\n    return state;\n};\n\nconst store = createStore(conterReducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}